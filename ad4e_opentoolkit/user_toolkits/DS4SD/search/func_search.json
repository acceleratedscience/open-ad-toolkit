{
	"fplugin": "ds4sd",
	"command": "search for",
	"subject": "search_text",
	"USING": {
		"index_key": "desc",
		"page_size": "int",
		"elastic_id": "str",
		"edit_distance": "int"
	},
	"SHOW": ["DATA", "DOCS"],
	"ESTIMATE_ONLY": {},
	"SAVE_AS": {},
	"RETURN_AS_DATA": {},
	"exec_type": "search_statement",
	"exec_cmd": "search for ",
	"help": {
		"name": "search",
		"category": "Queries",
		"command_v1": "search for <quoted_string> using (index_key=<index_name> [ page_size=<int> elastic_id=<elastic_id> edit_distance=<integer> ]) show (data|docs) [ estimate only ] [return as data] [save as '<csv_filename>'] ",
		"command": "search for '<string>' using (index_key=<index_name> [ page_size=<int> edit_distance=<integer> ]) show (data|docs) [ estimate only|return as data|save as '<csv_filename>' ]",
		"description_v1": "Performs a document search of the Deep Search repository based on a given index. Use Estimate only to determine the potential number of hits.\nedit_distance is used to se the search criteria for key words for document searches, it is defaulted to 10, if set to 0 then no snippets will be be returned.\n The clause 'return as data' forces in notebook or api mode the clietn to return an unstyled dataframe otherwise in notebooks the default is to return a pandas styled dataframe. alternatively the '.data' attribute returns a dataframe from the styled object. \n The below are examples of how to use the deepsearch \"Search\" command:\nExample 1: The below command list collections of documents that are in the area of \"Material Science\"\n     exec display_collection( domain='Materials Science' )\n\nExample 2: this looks for a documents that contain discussions on power conversion efficiency\n\n.     search for 'ide(\"power conversion efficiency\" OR PCE) AND organ* ' using  (index_key='arxiv' elastic_id=default ) show (docs) \n\nExample 3: searches the pubchem documents for the drug named \"Ibuprofen\" molecule data\n\n      search for  'Ibuprofen' USING (index_key='pubchem')   show (data)\n\nExample 4: searches for patents which mention the defined smiles molecule\n\n     search for 'identifiers._name:\"smiles#ccc(coc(=o)cs)(c(=o)c(=o)cs)c(=o)c(=o)cs\" ' using (index_key='patent-uspto-smiles') show (data)",
		"description": "Performs a document search of the Deep Search repository based on a given index.\n\nParameters:\n<cmd>index_key</cmd> - The string to search for.\n<cmd>page_size</cmd> - (default: None) Paginate the results.\n<cmd>edit_distance</cmd> (default: 10) - Set the search criteria for key words for document searches. When set to 0, no snippets will be be returned.\n\nClauses:\n<cmd>show (data)</cmd> - Display structured data from within the documents.\n<cmd>show (docs)</cmd> - Display document context.\n<cmd>estimate only</cmd> - Determine the potential number of hits.\n<cmd>return as data</cmd> - For Notebook or API mode. Removes all styling from the Pandas DataFrame, ready for further processing.\n\nExamples:\n- Look for documents that contain discussions on power conversion efficiency:\n\n    <cmd>search for 'ide(\"power conversion efficiency\" OR PCE) AND organ*' using (index_key='arxiv' elastic_id=default) show (docs)</cmd>\n\n- Search the pubchem archive for 'Ibuprofen' and display related molecules' data:\n\n    <cmd>search for 'Ibuprofen' USING (index_key='pubchem') show (data)</cmd>\n\n- Search for patents which mention a specific smiles molecule:\n\n    <cmd>search for 'identifiers._name:\"smiles#ccc(coc(=o)cs)(c(=o)c(=o)cs)c(=o)c(=o)cs\"' using (index_key='patent-uspto-smiles') show (data)</cmd>",
		"url": ""
	},
	"library": "ds4sd_search",
	"method": "search"
}
