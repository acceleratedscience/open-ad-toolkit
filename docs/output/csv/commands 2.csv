Command;Category
interpret recipe '<recipe_paragraph>' | '<txt_filename>' ;General
list rxn models;General
set workspace <workspace_name>;Workspaces
get workspace [ <workspace_name> ];Workspaces
create workspace <workspace_name> [ description('<description>') on path '<path>' ];Workspaces
remove workspace <workspace_name> ;Workspaces
list workspaces;Workspaces
add molecule|mol <name> | <smiles> | <inchi> | <inchkey> | <cid>;Molecules
display molecule|mol <name> | <smiles> | <inchi> | <inchkey> |  <cid>;Molecules
rename molecule <molecule_identifer_string> name <molecule_name>;Molecules
export molecule|mol <name> | <smiles> | <inchi> | <inchkey> |  <cid> [as file];Molecules
remove molecule|mol <name> | <smiles> | <inchi> | <inchkey> | <formula> | <cid> ;Molecules
list molecules|mols;Molecules
save molecule-set|molset as <molecule-set_name>;Molecules
load molecule-set|molset <molecule-set_name>;Molecules
list molecule-sets|molsets;Molecules
enrich molecule-set with analysis;Molecules
clear analysis cache;Molecules
clear molecules;Molecules
create molecule <smiles_string> name <molecule_name>;Molecules
@(<name> | <smiles> | <inchi> | <inchkey> | <cid>)>><molecule_property_name>;Molecules
load molecules using file '<csv_or_sdf_filename>';Molecules
export molecules;Molecules
show molecules using ( file '<mols_file>' | dataframe <dataframe> ) [ save as '<sdf_or_csv_file>' | as molsobject ];Molecules
show mol '<json_mol_file> | <sdf_file> | <smiles_string> | <inchi_string>';Molecules
ds4sd;Toolkits
rxn;Toolkits
st4sd;Toolkits
gt4sd;Toolkits
list toolkits;Toolkits
list all toolkits;Toolkits
add toolkit <toolkit_name>;Toolkits
remove toolkit <toolkit_name>;Toolkits
set context <toolkit_name> [ reset ];Toolkits
get context;Toolkits
unset context;Toolkits
create run;Runs
save run as <run_name>;Runs
run <run_name>;Runs
list runs;Runs
display run <run_name>;Runs
display data '<filename.csv>';Utility
  -> result save [as '<filename.csv>'];Utility
  -> result open;Utility
  -> result edit;Utility
  -> result copy;Utility
  -> result display;Utility
edit config '<json_config_file>' [ schema '<schema_file>'];Utility
tell me <how to do xyz>;LLM
set llm  <language_model_name>;LLM
clear llm auth;LLM
list files;File System
import from '<external_source_file>' to '<workspace_file>';File System
export from '<workspace_file>' to '<external_file>';File System
copy file '<workspace_file>' to '<other_workspace_name>';File System
remove '<filename>';File System
intro;Help
docs;Help
?;Help
? ...<soft>   --> List all commands containing "..."</soft>;Help
... ?<soft>   --> List all commands starting with "..."</soft>;Help
search for similar molecules to '<smiles>' [ save as '<filename.csv>' ];Search Molecules
search for molecules in patents from list ['<patent1>', '<patent2>', ...] | dataframe <dataframe_name> | file '<filename.csv>' [ save as '<filename.csv>' ];Search Molecules
search for patents containing molecule '<smiles>' | '<inchi>' | '<inchi_key>' [ save as '<filename.csv>' ];Search Molecules
search for substructure instances of '<smiles>' [ save as '<filename.csv>' ];Search Molecules
search collection '<collection_name_or_key>' for '<search_string>' [ using (page_size=<int> system_id=<system_id> edit_distance=<integer> display_first=<integer>) ] show (data | docs) [ estimate only | return as data | save as '<filename.csv>' ];Search Collections
display collection matches for '<search_string>' [ save as '<filename.csv>' ];Search Collections
display collections in domains from list <list_of_domains> [ save as '<filename.csv>' ] ;Collections
display all collections [ save as '<filename.csv>' ];Collections
display collections for domain '<domain_name>' ;Collections
display collection details '<collection_name_or_key>';Collections
predict retrosynthesis '<smiles>' [ using (option1=<value> option2=<value>) ];Retrosynthesis
predict reaction in batch from dataframe <dataframe_name> | file '<filename.csv>' | list ['<smiles>.<smiles>','<smiles>.<smiles>'] [ using (ai_model='<ai_model>') ] [ use_saved ];Prediction
predict reaction '<smiles>.<smiles>' [ using (ai_model='<ai_model>') ] [ use_saved ];Prediction
predict reaction topn in batch from dataframe <dataframe_name> | file '<filename.csv>' | list ['<smiles>.<smiles>','<smiles>.<smiles>'] [ using (topn=<integer> ai_model='<ai_model>') ] [ use_saved ];Prediction