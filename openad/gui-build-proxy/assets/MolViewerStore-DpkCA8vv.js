import{M as D,Z as y,$ as c,N as _,e as a,z as n}from"./index-CbxKm7xL.js";function d(){return{_molType:null,_smol:{data:{identifiers:{}},data3D:null,data2D:null,meta:null},_mmol:{_keyMap:{},data:null,data3DFormat:null,data3D:null,meta:null},_molFromMolsetIndex:null,_loading:!0,_hasChanges:!1}}const b=D("molViewerStore",{state:()=>d(),getters:{molType(){return this._molType},dataType(){return this.isSmol?"smol":this.isMmol?this._mmol.data3DFormat:"molset"},isSmol(){return this._molType=="smol"},isMmol(){return this._molType=="mmol"},name(){var e,s,i;return this.isSmol?((e=this._smol.data.identifiers)==null?void 0:e.name)||"Unnamed Molecule":this.isMmol?((i=(s=this._mmol.data)==null?void 0:s.entry)==null?void 0:i.id)||"Unknown Macromolecule":""},nameSlug(){return y(this.name)},molFromMolset(){return!!this._molFromMolsetIndex},molFromMolsetIndex(){return this._molFromMolsetIndex},isEmpty(){return!this._molType},hasChanges(){return this._hasChanges},loading(){return this._loading},smol(){return this.isSmol?this._smol.data:null},inchi(){var e,s;return this.isSmol&&((s=(e=this._smol.data)==null?void 0:e.identifiers)==null?void 0:s.inchi)||null},smiles(){var e,s,i,o,t,l;return this.isSmol?((s=(e=this._smol.data)==null?void 0:e.identifiers)==null?void 0:s.isomeric_smiles)||((o=(i=this._smol.data)==null?void 0:i.identifiers)==null?void 0:o.canonical_smiles)||((l=(t=this._smol.data)==null?void 0:t.identifiers)==null?void 0:l.smiles):null},identifier(){var e,s,i,o,t,l;return this.isSmol&&(this.inchi||this.smiles||((s=(e=this._smol.data)==null?void 0:e.identifiers)==null?void 0:s.inchikey)||((o=(i=this._smol.data)==null?void 0:i.identifiers)==null?void 0:o.name)||((l=(t=this._smol.data)==null?void 0:t.identifiers)==null?void 0:l.cid))||null},mdl(){return this.isSmol?this._smol.data3D:null},svg(){return this.isSmol?this._smol.data2D:null},enriched(){var e;return this.isSmol?!!((e=this._smol.data)!=null&&e.enriched):!1},propertiesString(){if(!this.isSmol||!this._smol.data||!("properties"in this._smol.data))return null;const e={};for(const s in this._smol.data.properties){let i=this._smol.data.properties[s];(i||i===0)&&(i=i.toString()),i&&(e[s]=`${s}: ${i}`)}return e},mmol(){return this.isMmol?this._mmol:null},mmolData(){return this.isMmol?this._mmol.data:null},mmolDataHuman(){if(!this.isMmol||!this._mmolDataHuman)return null;const e={};return Object.keys(this._mmolDataHuman).sort((s,i)=>s.toLowerCase().localeCompare(i.toLowerCase())).forEach(s=>e[s]=this._mmolDataHuman[s]),e},_mmolDataHuman(){if(!this.isMmol)return null;const e=this._mmol.data,s={};for(const i in e){const o=g(i);if(Array.isArray(e[i])&&c(e[i][0])){let t;["pdbx_struct_oper_list"].includes(i)?t=e[i].map(l=>S(l)):t=e[i].map(l=>{const r={};for(const m in l){const u=p(m);r[u]=f(l[m])}return r}),s[o]=t,this._mmol._keyMap[o]=i}else if(c(e[i])){let t={};if(["entry"].includes(i))t={};else if(["atom_sites","database_PDB_matrix","pdbx_struct_oper_list"].includes(i))t=S(e[i]);else for(const l in e[i]){const r=p(l);t[r]=f(e[i][l])}s[o]=t,this._mmol._keyMap[o]=i}else e[i]&&typeof e[i]=="string"&&(s[o]=f(e[i]),this._mmol._keyMap[o]=i)}return s},mmolDataKeyMap(){return this._mmol._keyMap?this._mmol._keyMap:{}},mmolData3D(){return this.isMmol?this._mmol.data3D:null},mmolData3DFormat(){return this.isMmol?this._mmol.data3DFormat:null}},actions:{setMolData(e,s){s=="smol"?(e=e,this._molType="smol",this._smol.data=e):s=="mmol"&&(e=e,this._molType="mmol",this._mmol.data=e.data,this._mmol.data3DFormat=e.data3DFormat,this._mmol.data3D=e.data3D,this._mmol.meta=e.meta),this._loading=!1},setMolFromMolsetIndex(e,s=!1){if(this._molFromMolsetIndex=e,!s){const i=e?`?show=${e}`:"",o=_.currentRoute.value.path+i;_.push(o)}},setHasChanges(e){this._hasChanges=e},clear(){Object.assign(this,d())},setSmolIdentifier(e,s){this.isSmol&&(this._smol.data.identifiers[e]=s)},async fetchSmolVizData(e){this.isSmol&&a(n.getSmolVizData(e),{onSuccess:s=>{s.svg&&this.setMolVizData(s.svg,s.mdl)},onError:s=>{console.log("Error in getSmolVizData()",s)}})},setMolVizData(e,s){this.isSmol&&(e&&(this._smol.data2D=e),s&&(this._smol.data3D=s))},async enrichSmol(){if(this.isSmol)return new Promise((e,s)=>{a(n.enrichSmol(this.smol),{onSuccess:i=>{this._smol.data=i,this.setHasChanges(!0),this.setEnriched(!0),e(!0)},onError:i=>s(i)})})},setEnriched(e){this.isSmol&&(this._smol.data.enriched=e)},saveSmolAsJSON(e,{newFile:s=!1,force:i=!1}={}){return this.isSmol?new Promise((o,t)=>{a(n.saveSmolAsJSON(e,this.smol,s,i),{onSuccess:()=>o(!0),onError:()=>t(!0)})}):Promise.resolve(!1)},saveSmolAsCSV(e,{newFile:s=!1,force:i=!1}={}){return this.isSmol?new Promise((o,t)=>{a(n.saveSmolAsCSV(e,this.smol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveSmolAsSDF(e,{newFile:s=!1,force:i=!1}={}){return this.isSmol?new Promise((o,t)=>{a(n.saveSmolAsSDF(e,this.smol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveSmolAsMDL(e,{newFile:s=!1,force:i=!1}={}){return this.isSmol?new Promise((o,t)=>{a(n.saveSmolAsMDL(e,this.smol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveSmolAsSMILES(e,{newFile:s=!1,force:i=!1}={}){return this.isSmol?new Promise((o,t)=>{a(n.saveSmolAsSMILES(e,this.smol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveMmolAsMmolJson(e,{newFile:s=!1,force:i=!1}={}){return this.isMmol?new Promise((o,t)=>{a(n.saveMmolAsMmolJson(e,this.mmol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveMmolAsPDB(e,{newFile:s=!1,force:i=!1}={}){return this.isMmol?new Promise((o,t)=>{a(n.saveMmolAsPDB(e,this.mmol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)},saveMmolAsCIF(e,{newFile:s=!1,force:i=!1}={}){return this.isMmol?new Promise((o,t)=>{a(n.saveMmolAsCIF(e,this.mmol,s,i),{onSuccess:()=>o(!0),onError:l=>t(l)})}):Promise.resolve(!1)}}});function g(e){return e=e.replace(/^pdbx_/i,""),e=e.split("_").map(s=>s.charAt(0).toUpperCase()+s.slice(1)).join(" "),e=e.replace("SG Project","Structural Genomics Project"),e=e.replace("Chem Comp","Chemical Composition"),e=e.replace("Struct Asym","Structural Asymmetric Unit"),e=e.replace(/\bexptl\b/gi,"Experimental"),e=e.replace(/\bnmr\b/gi,"NMR"),e=e.replace(/\bstruct\b/gi,"Structure"),e=e.replace(/\bgen\b/gi,"Generation"),e=e.replace(/\bref\b/gi,"Reference"),e=e.replace(/\bseq\b/gi,"Sequence"),e=e.replace(/\bdiffrn\b/gi,"Diffraction"),e=e.trim(),e}function p(e){return e=e.replace(/^pdbx_/i,""),e=e.split("_").join(" "),e=e.charAt(0).toUpperCase()+e.slice(1).toLowerCase(),e=e.replace(/\bdb\b/gi,"DB"),e=e.replace(/\bid\b/gi,"ID"),e=e.replace(/\bdoi\b/gi,"DOI"),e=e.trim(),e}function f(e){return e?((c(e)||Array.isArray(e))&&console.log("***",e),c(e)||Array.isArray(e)||((e.startsWith("'")&&e.endsWith("'")||e.startsWith(";")&&e.endsWith(";"))&&(e=e.slice(1,-1)),e===e.toUpperCase()&&(e=e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()),e=="entry id"&&console.log("-1",`-${e}-`,e.replace(/\bid\b/gi,"ID")),e=h(e),e=e?e.trim():null),e):null}function h(e,s=null){return e=="?"||!e?s||null:e}function S(e){const s={},i={},o={};for(const t in e){const l=t.split("[");if(l.length==3){let r=l[0].replace(/(_)?matrix$/i,"").toLowerCase();r=r||"_",s[r]=s[r]||[];const m=s[r],u=+l[1].replace("]","")-1,M=+l[2].replace("]","")-1;m[u]=m[u]||[],m[u][M]=h(e[t],"-")||"-"}else if(l.length==2){let r=l[0].replace(/(_)?vector$/i,"").toLowerCase();r=r||"_",i[r]=i[r]||[],i[r].push(h(e[t],"-")||"-")}else o[t]=h(e[t],"-")||"-"}return{matrices:s,vectors:i,fields:o}}export{b as u};
